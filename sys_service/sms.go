// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package sys_service

import (
	"context"

	"github.com/SupenBysz/gf-admin-community/sys_model"
)

type (
	ISmsAppConfig interface {
		GetAppConfigByNo(ctx context.Context, appNo string) (*sys_model.SmsAppConfig, error)
		GetAppAvailableNumber(ctx context.Context, appNo string) (int, error)
		CreateAppNumber(ctx context.Context, config *sys_model.SmsAppConfig) (bool, error)
		UpdateAppNumber(ctx context.Context, appNo string, fee uint64) (bool, error)
	}
	ISmsBusinessConfig        interface{}
	ISmsSendLogConfig         interface{}
	ISmsServiceProviderConfig interface {
		CreateProvider(ctx context.Context, info *sys_model.SmsServiceProviderConfig) (bool, error)
		GetProviderByNo(ctx context.Context, no string) (*sys_model.SmsServiceProviderConfig, error)
		QueryProviderList(ctx context.Context, search *sys_model.SearchParams, isExport bool) (*sys_model.ServiceProviderConfigListRes, error)
	}
	ISmsSignConfig interface {
		CreateSign(ctx context.Context, info *sys_model.SmsSignConfig) (bool, error)
		AuditSign(ctx context.Context, id int64, info *sys_model.AuditInfo) (bool, error)
		GetSignBySignName(ctx context.Context, signName string) (res *sys_model.SmsSignConfig, err error)
		GetSignById(ctx context.Context, id int64) (*sys_model.SmsSignConfig, error)
	}
	ISmsTemplateConfig interface {
		CreateTemplate(ctx context.Context, info *sys_model.SmsTemplateConfig) (bool, error)
		AuditTemplate(ctx context.Context, id int64, info *sys_model.AuditInfo) (bool, error)
		GetByTemplateNo(ctx context.Context, templateNo string) (*sys_model.SmsTemplateConfig, error)
	}
)

var (
	localSmsSendLogConfig         ISmsSendLogConfig
	localSmsServiceProviderConfig ISmsServiceProviderConfig
	localSmsSignConfig            ISmsSignConfig
	localSmsTemplateConfig        ISmsTemplateConfig
	localSmsAppConfig             ISmsAppConfig
	localSmsBusinessConfig        ISmsBusinessConfig
)

func SmsTemplateConfig() ISmsTemplateConfig {
	if localSmsTemplateConfig == nil {
		panic("implement not found for interface ISmsTemplateConfig, forgot register?")
	}
	return localSmsTemplateConfig
}

func RegisterSmsTemplateConfig(i ISmsTemplateConfig) {
	localSmsTemplateConfig = i
}

func SmsAppConfig() ISmsAppConfig {
	if localSmsAppConfig == nil {
		panic("implement not found for interface ISmsAppConfig, forgot register?")
	}
	return localSmsAppConfig
}

func RegisterSmsAppConfig(i ISmsAppConfig) {
	localSmsAppConfig = i
}

func SmsBusinessConfig() ISmsBusinessConfig {
	if localSmsBusinessConfig == nil {
		panic("implement not found for interface ISmsBusinessConfig, forgot register?")
	}
	return localSmsBusinessConfig
}

func RegisterSmsBusinessConfig(i ISmsBusinessConfig) {
	localSmsBusinessConfig = i
}

func SmsSendLogConfig() ISmsSendLogConfig {
	if localSmsSendLogConfig == nil {
		panic("implement not found for interface ISmsSendLogConfig, forgot register?")
	}
	return localSmsSendLogConfig
}

func RegisterSmsSendLogConfig(i ISmsSendLogConfig) {
	localSmsSendLogConfig = i
}

func SmsServiceProviderConfig() ISmsServiceProviderConfig {
	if localSmsServiceProviderConfig == nil {
		panic("implement not found for interface ISmsServiceProviderConfig, forgot register?")
	}
	return localSmsServiceProviderConfig
}

func RegisterSmsServiceProviderConfig(i ISmsServiceProviderConfig) {
	localSmsServiceProviderConfig = i
}

func SmsSignConfig() ISmsSignConfig {
	if localSmsSignConfig == nil {
		panic("implement not found for interface ISmsSignConfig, forgot register?")
	}
	return localSmsSignConfig
}

func RegisterSmsSignConfig(i ISmsSignConfig) {
	localSmsSignConfig = i
}
