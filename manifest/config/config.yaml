server:
  address: "127.0.0.1:7747"
  serverRoot: "/resource"
  dumpRouterMap: false
  routeOverWrite: true
  accessLogEnabled: false
  SessionIdName: "KysionGfAdminCommunitySessionId"
  sessionPath: "temp/sessions/gf-admin_community_sessions"    # Session文件存储目录
  openapiPath: "/api/openapi.json"
  swaggerPath: "/api/docs"
  swaggerJsURL: "https://cdn.redoc.ly/redoc/latest/bundles/redoc.standalone.js" # 自定义 文档 JS 镜像地址，需要 gf 2.6.0 以上版本才支持

service:
  # 用户表ID生成器，分布式终端标识，取值范围 1 ~ 63，解决分布式多服务横向扩展时保证生成的ID不重复
  idGeneratorWorkerId: 1
  # 接口前缀
  apiPrefix: "/api"
  # Token Sign Key
  tokenSignKey: "KysionGfAdminProTokenSignKey"
  # 用户默认类型：0匿名，1用户，2微商，4商户、8广告主、16服务商、32运营商；独立调用创建用户、查询用户信息等相关接口时强制过滤类型
  # 新增用户默认类型：0匿名，1用户，2微商，4商户、8广告主、16服务商、32运营中心、-1超级管理员
  # -1超级管理员，不支持注册为超级管理员
  # 业务层有自定义类型时将忽略这里的设置
  userDefaultType: 32
  # 新增用户默认状态：0未激活，1正常，-1封号，-2异常，-3已注销
  userDefaultState: 0
  # 是否运行注册用户，false时用户注册接口将强制返回失败
  userAllowRegister: false
  # 不允许登录的用户类型，多个用半角逗号隔开，支持扩展自定义类型
  notAllowLoginUserType: [ 0 ]
  # 加载允许登录的用户类型，并去重
  # 如果NotAllowLoginUserTypeArr包含allowLoginUserType中的用户类型，那么前者优先级高于后者, 默认值为UserDefaultType
  allowLoginUserType: [32,-1]
  # 需要存储到数据库中的日志，支持：all,error,warn,info
  logLevelToDatabase: [ "all" ]
  # 业务审核服务时限，超过时限需要重新申请审核，相关业务有自定义设置时，将自动忽略这里的设置
  auditExpireDay:
    default: 15
  # Session上下文缓存Key
  sessionContextKey: "KysionGfAdminBizCtxContextKye"
  # ORM 缓存存
  ormCache:
    - name: sys_permission
      seconds: 3600
      force: false
    - name: sys_user
      seconds: 3600
      force: false
    - name: sys_menu
      seconds: 3600
      force: false
  # 登陆支持的方式：1用户名+密码+图形验证码、 2手机号+密码或验证码、4邮箱+密码
  loginRule: [ 1,2,4 ]
  # 注册支持的方式：1用户名+密码+图形验证码、 2用户名+手机号+验证码、4用户名+邮箱+验证码
  registerRule: [1,2,4]
  # 注册是否强制需要填写邀约码: true必需填写邀约码、false可选
  registerIsNeedInviteCode: true
  # 邀约码默认时长
  inviteCodeExpireDay: 0
  # 邀约码激活次数上限
  inviteCodeMaxActivateNumber: 0
  # 是否部署NFS文件系统
  isDeployNFS: false

# 邮件设置
email:
  # 帐号
  username: ""
  # 密码
  password: ""
  # 发送者昵称
  sendAuthor: ""
  # 标题前缀
  titlePrefix: ""
  # 授权码
  authCode: ""
  pop3:
    host: "pop3.qq.com"
    port: 995
    ssl: true
  smtp:
    host: "smtp.qq.com"
    port: 465
    ssl: true


# 日志配置
logger:
  path: "temp/logs/default"
  level: "all"
  stdout: true
  ctxKeys: [ "RequestId" ]

# 文件上传设置
upload:
  # 用戶1分钟内限制上传最大文件数量
  fileMaxUploadCountMinute: 10
  # 文件上传的默认保存路径
  path: "resource/upload"
  # 文件上传默认的临时保存路径
  tempPath: "temp/upload"

# 文件下载设置
download:
  # 文件下载默认的临时保存路径
  tempPath: "temp/download"

# oss对象存储
oss:
  # 平台的oss-bucket名称，没有部署NFS系统的话，一般temp资源、公共资源 都是放在平台的oss中
  masterBucketName: ""
  # 当前服务的oss-bucket名称，各服务端的单独的对象存储空间
  bucketName: ""
  # oss图片输出质量变换，质量变换仅支持JPG和WebP，其他图片格式不支持。 【quality,q_90 相对质量变换。quality,Q_90 绝对质量变换。】
  quality: "q_90"
  # 图片输出的文字水印，注意：同时选择文字水印+图片水印，代表输出的水印需求是：添加图片和文字混合水印
  textWatermark: ""
  # 图片输出的图片水印，注意：同时选择文字水印+图片水印，代表输出的水印需求是：添加图片和文字混合水印
  imageWatermark: ""


# 数据库连接配置
database:
  logger:
    path: "temp/logs/sql"
    level: "all"
    stdout: true
    ctxKeys: ["RequestId"]

  default:
    link: "pgsql:user=dbUsername password=dbPassword host=127.0.0.1 port=5432 dbname=dbName sslmode=disable"
    debug: true

redis:
  # 单实例配置示例1
  default:
    address: 127.0.0.1:6379
    db: 1
